apiVersion: v1
kind: Template
metadata:
  name: tooling-pipeline
parameters:
- name: "CLOUDAPPS_NAMESPACE"
  displayName: CloudApps Namespace
  description: "The namespace where Gogs, Nexus and Jenkins will reside"
  value: tooling
  required: true
- name: "GOGS_URL"
  displayName: Gogs's URL
  description: "Gogs's Internal URL to be used into other applications, such as Jenkins or Nexus"
  value: http://gogs.${CLOUDAPPS_NAMESPACE}.svc.cluster.local:3000
  required: true
- name: GOGS_USERNAME
  displayName: Gogs Username
  value: demo
  required: true
- name: "MICROSERVICES_NAMESPACE"
  displayName: MicroServices Namespace
  description: "The namespace where a set of MicroServices (Cars, Flight, BRMS, Hotel and Fuse)"
  value: microservices
  required: true
objects:
#### PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE 
#### PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE PIPELINE 
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: forum-pipeline
  spec:
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node('maven') {
           stage 'Build'
                git url: '${GOGS_URL}/${GOGS_USERNAME}/brms.git'

           stage 'Test'
                sh "mvn clean test -f discountRules/pom.xml"

           stage 'Deploy'
                def ocCmd = "/usr/bin/oc --token=`cat /var/run/secrets/kubernetes.io/serviceaccount/token` --server=https://openshift.default.svc.cluster.local --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt"
                sh "${ocCmd} start-build bc/brms -n ${MICROSERVICES_NAMESPACE} --follow"
          }
      type: JenkinsPipeline
      type: Generic
  status:
    lastVersion: 0
